# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mx3_F_RllX7Lk4EJVhYf83VDPjmbsQMR
"""



import streamlit as st
import pandas as pd
import joblib
import re

# Load data and models
@st.cache_data
def load_data():
    df = pd.read_csv("karkidi_jobs.csv")
    return df

@st.cache_resource
def load_models():
    vectorizer = joblib.load("tfidf_vectorizer.pkl")
    kmeans = joblib.load("kmeans_model.pkl")
    return vectorizer, kmeans

def clean_text(text):
    if pd.isna(text):
        return ""
    text = text.lower()
    text = re.sub(r"[^a-zA-Z0-9, ]", "", text)
    text = re.sub(r"\s+", " ", text)
    tokens = [t.strip() for t in text.split(',') if t.strip()]
    return " ".join(tokens)

# App
st.set_page_config(page_title="Karkidi Job Clustering", layout="wide")
st.title("üîç Job Clustering Dashboard (Karkidi)")

df = load_data()
vectorizer, kmeans = load_models()

# Add cleaned skills if not present
if "Cleaned_Skills" not in df.columns or "Predicted_Cluster" not in df.columns:
    df["Cleaned_Skills"] = df["Skills"].apply(clean_text)
    X = vectorizer.transform(df["Cleaned_Skills"])
    df["Predicted_Cluster"] = kmeans.predict(X)

# Sidebar filters
cluster_selected = st.sidebar.selectbox("Select Cluster", sorted(df["Predicted_Cluster"].unique()))
search_title = st.sidebar.text_input("Search Job Title (optional)")
search_company = st.sidebar.text_input("Search Company (optional)")

# Apply filters
filtered_df = df[df["Predicted_Cluster"] == cluster_selected]

if search_title:
    filtered_df = filtered_df[filtered_df["Title"].str.contains(search_title, case=False, na=False)]
if search_company:
    filtered_df = filtered_df[filtered_df["Company"].str.contains(search_company, case=False, na=False)]

st.subheader(f"Jobs in Cluster {cluster_selected}")
st.write(f"Showing {len(filtered_df)} job(s).")

st.dataframe(filtered_df[["Title", "Company", "Skills", "Predicted_Cluster"]].reset_index(drop=True), use_container_width=True)
